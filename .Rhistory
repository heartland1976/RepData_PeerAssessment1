?dev
??dev
quartz()
plot(x,y)
x <- rnorm(150)
y <- rnorm(150)
plot(x,y)
dev.off()
unzip("activity.zip", overwrite=TRUE)
getwd()
setwd("/Users/jeroen/Documents/Coursera/datascience/[5] Reproducible Research")
getwd()
unzip("activity.zip", overwrite=TRUE)
?unzip
unzip("activity.zip", list=true, overwrite=TRUE)
unzip("activity.zip", list=TRUE, overwrite=TRUE)
'''
''''
setwd("/Users/jeroen/Documents/Coursera/datascience/[5] Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip", overwrite=TRUE)
activity <- read.csv("activity.csv")
## What is mean total number of steps taken per day?
head(activity)
packages.install("xtable")
install.packages("xtable")
install.packages("xtable")
head(activity)
head(activity)
head(activity)
head(activity)
head(activity)
head(activity)
install.packages("xtable")
library(xtable);
head(activity)
activityhead <- head(activity)
print(activityhead, type="html")
activityhead <- head(activity)
?read.csv
activity <- activity[!is.na(activity)]
head(activity)
```{r}
setwd("/Users/jeroen/Documents/Coursera/datascience/[5] Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip", overwrite=TRUE)
activity <- read.csv("activity.csv", )
activity <- activity[!is.na(activity)]
head(activity)
class(activity)
```{r}
setwd("/Users/jeroen/Documents/Coursera/datascience/[5] Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip", overwrite=TRUE)
activity <- read.csv("activity.csv", )
head(activity)
class(activity)
activity[complete.cases(activity),]
```{r}
setwd("/Users/jeroen/Documents/Coursera/datascience/[5] Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip", overwrite=TRUE)
activity <- read.csv("activity.csv", )
activity <- activity[complete.cases(activity),]
head(activity)
?apply
?mapply
?tapply
head(activity)
?apply
apply(activity, activity$date, sum)
mapply(activity, activity$date, sum)
lapply(activity, activity$date, sum)
aapply(activity, activity$date, sum)
apply(activity, activity$date, sum)
head(activity)
lapply(activity, sum)
aggregate(activity, li)
library(ddplyr)
library(plyr)
ddply(activity, activity$date, summarize)
?aggregate
aggregate(activity, activity$date)
aggregate(activity, activity$date, sum)
aggregate(activity, by=c(activity$date), sum)
aggregate(activity, list(activity$date), sum)
aggregate(activity, list(activity$date))
aggregate(activity, list(activity$date))
tidy <- ddply(combined, .(Subject, Activity), function(x) colMeans(x[, 1:length(mean_std_features)]))
aggregate(activity, list(activity$date))
tidy <- ddply(combined, .(Subject, Activity), function(x) colMeans(x[, 1:length(mean_std_features)]))
tidy <- ddply(activity, .(date), function(x) sum(x))
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum, na.rm=TRUE)
x
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum)
x
hist(x)
x
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum)
x
activity <- read.csv("activity.csv", )
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum)
x
hist(x)
?hist
hist(x$steps)
hist(x$x)
hist(x$Group.1)
hist(x$Group.1)
colnames(x)
hist(x[1])
hist(x[2])
hist(x$x)
x
x
x$x
x$Group.1
hist(x$Group.1)
knit2html("PA1_template.Rmd")
colnames(x)
colnames(x) <- c("Date", "Frequency")
hist(x$Frequency)
?hist
title("total number of steps taken each day")
head(x)
mean(x$Frequency)
mean(x$Date)
mean(x$Frequency)
?aggregate\
?aggregate
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum, na.rm=TRUE)
colnames(x) <- c("Date", "Frequency")
hist(x$Frequency, main="Total number of steps taken each day")
mean(x$Frequency)
plot.ts(x)
head(activity)
plot(activity ~ interval, activity, type="l")
plot(steps ~ interval, activity, type="l")
head(activity,100)
head(activity, 200)
scale_x_datetime(labels = date_format("%H:%M"))
head(activity)
head(activity,3000)
plot(interval ~ steps, activity, type="l")
plot(interval ~ steps, activity, type="l")
head(activity)
plot(.(date, interval) ~ steps, activity, type="l")
plot(c(date, interval) ~ steps, activity, type="l")
plot(interval ~ steps, activity, type="l")
aggregate(activity$steps, by=list(activity$interval), fun=avg, na.rm=TRUE)
aggregate(activity$steps, by=list(activity$interval), FUN=avg, na.rm=TRUE)
aggregate(activity$steps, by=list(activity$interval), FUN=average, na.rm=TRUE)
aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
colnames(x)
head(x)
head(x,200)
x <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
x <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
colnames(x) <- c("Interval", "Average number of steps")
head(x)
plot(Interval ~ "Average number ofsteps", x, type="l")
plot(Interval ~ "Average number of steps", x, type="l")
colnames(x)
plot(Interval ~ x[2], x, type="l")
plot(Interval ~ x[1], x, type="l")
plot(x[1] ~ x[1], x, type="l")
class(activity)
class(x)
plot(, x, type="l")
plot(x, x, type="l")
plot(x, x, xlab = "" , type="l")
plot(x, x, xlab = "" , ylab="", type="l")
plot(x, x, xlab = "" , type="l")
plot(x, x, xlab = "", ylab="Average number of steps" , type="l")
plot(x, x, xlab = "", type="l")
head(x,800)
max(x[2])
plot(x, x, xlab = "", ylab = "", type="l")
plot(x, x, xlab = "", ylab = """, type="l")
?plot
plot(x, x, type="l")
title(xlab=NULL)
title(ylab=NULL)
title(ylab=NULL)
plot(x, x, type="l")
plot(x, x, type="l")
head(x)
plot(x$Interval , x, type="l")
plot(x$Interval , x$"Average number of steps", type="l")
plot(x$Interval , x$"Average number of steps", xlab="Interval (0-2355)", ylab="Average number of steps averaged over all days", type="l")
plot(x$Interval , x$"Average number of steps", xlab="Interval (0-2355)", ylab="Average number of steps averaged over all days", main="Average daily activity", type="l")
plot(x$Interval , x$"Average number of steps", xlab="Interval (0-2355)", ylab="Average number of steps averaged over all days", main="Average daily activity", type="l")
x[x$"Average of the number of steps"] = max(x$"Average of the number of steps")
x[max(x$"Average of the number of steps")]
max(x$"Average of the number of steps")
x <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
## Assign friendly names to the columns
colnames(x) <- c("Interval", "Average of the number of steps")
x[max(x$"Average of the number of steps")]
x[max(x$"Average of the number of steps"),]
x[,max(x$"Average of the number of steps")]
x[x$"Average of the number of steps" = max(x$"Average of the number of steps")]
x["Average of the number of steps" = max(x$"Average of the number of steps")]
x["Average of the number of steps" == max(x$"Average of the number of steps")]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps")]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),]
x[max(x$"Average of the number of steps"),]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),][1]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),][2]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),][1]
x[x$"Average of the number of steps" == max(x$"Average of the number of steps"),]$Interval
!complete.cases(activity)
count(!complete.cases(activity))
!complete.cases(activity)
nrow(!complete.cases(activity))
!complete.cases(activity)
is.na(activity)
!is.na(activity)
is.na(activity)
nrow(is.na(activity))
nrow(activity)
nrow(is.na(activity))
nrow(!is.na(activity))
nrow(!is.na(activity$steps))
is.na(activity$steps)
length(is.na(activity$steps))
length(!is.na(activity$steps))
length(activity[!is.na(activity$steps)])
length(activity[!is.na(activity$steps)])
nrow(activity[!is.na(activity$steps)])
activity
activity[is.na(activity$steps)]
head(activity)
activity[activity$steps=is.na(activity$steps)]
activity[activity$steps==is.na(activity$steps)]
activity[activity$steps==is.na(activity$steps)]n
nrow(na.omit(activity))
sum(complete.cases(activity))
sum(activity)
nrow(activity)
sum(!complete.cases(activity))
## Aggregate the data by date, and sum the number of steps.
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum, na.rm=TRUE)
head(x)
## Assign friendly names to the columns
colnames(x) <- c("Date", "Sum of the number of steps")
## Aggregate the data by date, and sum the number of steps.
x <- aggregate(activity$steps,by=list(activity$date), FUN=sum, na.rm=TRUE)
## Aggregate the data by date, and sum the number of steps.
x <- aggregate(activity$steps,by=list(activity$date), FUN=mean, na.rm=TRUE)
head(x)
merged <- merge(activity, x, by=c("date","Group.1")
)
colnames(x) <- c("Date", "Average")
head(x)
colnames(x) <- c("date", "average")
merged <- merge(activity, x, by="date")
head(merged)
head(merged,200)
head(merged,300)
## Aggregate the data by date, and sum the number of steps.
x <- aggregate(activity$steps,by=list(activity$date), FUN=median, na.rm=TRUE)
head(x)
colnames(x) <- c("date", "average")
x <- aggregate(activity$steps,by=list(activity$interval), FUN=mean, na.rm=TRUE)
colnames(x) <- c("interval", "median")
head(x)
head(x,500)
merged <- merge(activity, x, by="interval")
head(x)
head(merged)
head(merged,500)
head(merged)
## Assign friendly names to the columns
colnames(x) <- c("interval", "average")
## Merge the data sets
merged <- merge(activity, x, by="interval")
head(merged)
head(merged[is.na(merged$steps)])
head(merged[is.na(merged$steps)],)
head(merged[is.na(merged$steps),])
merged[is.na(merged$steps)] <- merged$average
merged[is.na(merged$steps)] <- merged[merged$average]
merged$steps[is.na(merged$steps)] <- merged$average[is.na(merged$steps)]
head(merged)
daytypes=c("weekdays","weekend")
daytypes=c("weekday","weekend")
daytypes
merged[weekdays(merged$date]
merged[weekdays(merged$date)]
merged[merged$date = weekdays(merged$date)]
merged[merged$date == weekdays(merged$date)]
?weekdays
weekdays(merged$date)
weekdays(merged$date)
head(merged)
weekdays(merged)
weekdays()
weekday()
weekdays(as.Date(merged$date))
weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday")
merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday")]
merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"),]
head(merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday")])
head(merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"),])
merged$daytype[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday")] = daytypes[2]
head(merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"),])
merged$daytype[!(weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"))] = daytypes[1]
head(merged[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"),])
head(merged)
head(merged)
nrow(merged)
weekend_data = merged[merged$daytype=daytypes[2]]
weekend_data = merged[merged$daytype=daytypes[2],]
weekend_data = merged[merged$daytype==daytypes[2],]
weekend_data
nrow(weekenddata)
nrow(weekend_data)
weekend_data = merged[merged$daytype==daytypes[2],]
weekday_data = merged[merged$daytype==daytypes[1],]
weekday_data
nrow(weekday_data)
nrow(weekday_data) + nrow(weekend_data)
## Aggregate the data by interval, and sum the number of steps.
x <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
## Assign friendly names to the columns
colnames(x) <- c("Interval", "Average of the number of steps")
weekday_data_aggregated <- aggregate(weekday_data$steps, by=list(weekday_data$interval), FUN=mean, na.rm=TRUE)
head(weekday_data_aggregated)
library(lattice)
xyplot(weekend_data_aggregated)
xyplot(weekend_data_aggregated)
## Aggregate the data by interval, and sum the number of steps.
weekday_data_aggregated <- aggregate(weekday_data$steps, by=list(weekday_data$interval), FUN=mean)
## Assign friendly names to the columns
colnames(weekday_data_aggregated) <- c("Interval", "Average of the number of steps")
## Aggregate the data by interval, and sum the number of steps.
weekend_data_aggregated <- aggregate(weekend_data$steps, by=list(weekend_data$interval), FUN=mean)
## Assign friendly names to the columns
colnames(weekend_data_aggregated) <- c("Interval", "Average of the number of steps")
xyplot(weekend_data_aggregated)
xyplot(, weekend_data_aggregated)
xyplot(weekend_data_aggregated, weekend_data_aggregated)
xyplot(weekend_data_aggregated$"Average of the number of steps", weekend_data_aggregated)
plot
plot(weekend_data_aggregated, weekend_data_aggregated)
plot(weekend_data_aggregated, weekend_data_aggregated, type="l")
plot(weekend_data_aggregated, weekend_data_aggregated, xlab="", ylab="", type="l")
plot(weekend_data_aggregated, weekend_data_aggregated, xlab="Interval", ylab="Average", type="l")
plot(weekend_data_aggregated, weekend_data_aggregated, xlab="Interval", type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated, xlab="Interval", type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all *weekend* days, type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all >weekend< days, type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all weekend days, type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all *weekend* days", type="l")
plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all *week* days", type="l")
par(mfrow=c(2,1))
par(mfrow=c(2,1))
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all *weekend* days", type="l")
plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps averaged over all *week* days", type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekends)", type="l")
plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekdays)", type="l")
m <- rbind(c(1, 1))
layout(m)
layout.show(1)
layout.show(3)
layout.show(3)
layout(m)
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekends)", type="l")
> plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekdays)", type="l")
m <- rbind(c(2, 1))
layout(m)
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekends)", type="l")
> plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekdays)", type="l")
plot(weekend_data_aggregated$Interval, weekend_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekends)", type="l")
plot(weekday_data_aggregated$Interval, weekday_data_aggregated$"Average of the number of steps", xlab="Interval", ylab="Average number of steps (weekdays)", type="l")
layout.show(2)
m <- rbind(c(1, 2))
layout.show(2)
layout.show(2)
m <- rbind(c(1, 2))
layout(m)
layout.show(2)
layout.show(3)
layout.show(2)
layout.show(1)
layout.show(1)
print(m)
layout.show(3)
layout.show(2)
layout.show(1)
layout.show(2)
m <- rbind(c(2, 1))
layout(m)
layout.show(2)
layout.show(3)
layout.show(1)
?layout
par(def.par)
layout.close()
dev.off()
m <- rbind(c(2, 1))
layout(m)
layout.show(2)
par(mfrow=c(1,1))
layout(m)
layout.show(2)
m <- rbind(c(2, 1))
m
par()
xyplot(steps ~ interval| levels(activity.week.mean$date),
data = activity.week.mean,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot(steps ~ interval | daytype,
data = weekday_data_aggregated,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot(steps ~ interval | weekday_data_aggregated$daytype,
data = weekday_data_aggregated,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot("Average of the number of steps" ~ Interval | weekday_data_aggregated$daytype,
data = weekday_data_aggregated,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot("Average of the number of steps" ~ Interval | weekday_data_aggregated$daytype,
data = weekday_data_aggregated,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
weekday_data_aggregated
head(weekday_data_aggregated)
merged_aggregated <- aggregate(merged$steps, by=list(merged$interval), FUN=mean)
head(merged)
xyplot("Average of the number of steps" ~ Interval | daytype,
data = merged,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
xyplot("Average of the number of steps" ~ Interval | daytype,
data = merged,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
colnames(merged) <- c("Interval", "Average of the number of steps")
xyplot("Average of the number of steps" ~ Interval | daytype,
data = merged,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
head(merged)
colnames(merged) <- c("Interval", "Average of the number of steps", "date","","daytype")
xyplot("Average of the number of steps" ~ Interval | daytype,
data = merged,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
## Create a new data set averaged by date
x <- aggregate(activity$steps,by=list(activity$interval), FUN=mean, na.rm=TRUE)
## Assign friendly names to the columns
colnames(x) <- c("interval", "average")
## Merge the data sets
merged <- merge(activity, x, by="interval")
## Replace the NAs with the computed value
merged$steps[is.na(merged$steps)] <- merged$average[is.na(merged$steps)]
daytypes=c("weekday","weekend")
merged$daytype[!(weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday"))] = daytypes[1]
merged$daytype[weekdays(as.Date(merged$date)) %in% c("Saturday", "Sunday")] = daytypes[2]
merged_aggregated <- aggregate(merged$steps, by=list(merged$interval), FUN=mean)
colnames(merged_aggregated) <- c("interval", "average", "date","","daytype")
head(merged_aggregated)
head(merged_aggregated)
merged_aggregated <- aggregate(.(merged$daytype, merged$steps), by=list(merged$interval), FUN=mean)
merged_aggregated <- aggregate(merged$daytype ~ merged$steps, by=list(merged$interval), FUN=mean)
head(merged_aggregated)
colnames(merged_aggregated) <- c("interval", "average", "date","","daytype")
merged_aggregated <- aggregate(merged$steps, by=list(merged$daytype, merged$interval), FUN=mean)
head(merged_aggregated)
colnames(merged_aggregated) <- c("daytype", "interval","average")
xyplot(average ~ interval | daytype,
data = merged_aggregated,
type = "l",
xlab = "Interval",
ylab = "Number of steps",
layout=c(1,2))
## Aggregate the data by interval, and sum the number of steps.
merged_aggregated <- aggregate(merged$steps, by=list(merged$daytype, merged$interval), FUN=mean)
## Assign friendly names to the columns
colnames(merged_aggregated) <- c("daytype", "interval", "average")
xyplot(average ~ interval | daytype,
data = merged_aggregated,
type = "l",
xlab = "Interval",
ylab = "Average number of steps",
layout=c(1,2)
)
install.packages("lattice")
install.packages("lattice")
installed.packages()
